# most of the file is system generated by scaffolding except line 6 and 20-25
class StreamsController < ApplicationController
  before_action :set_stream, only: [:show, :edit, :update, :destroy]
  # this below line validates that admins can only set streams
  # admin_signin_status is present in application_helper.rb
  before_action :admin_signin_status, only: [:edit, :new, :destroy]

  # GET /streams
  def index
    @streams = Stream.all
    @user = current_user
  end

  # GET /streams/1
  # the below method has been modified to show the result
  # generate_result is also present in application_helper.rb
  def show
    @stream = Stream.find(params[:id])
    if Rank.exists?
     @gens = generate_result(@stream.id, 'GEN')
     @sts =  generate_result(@stream.id, 'ST')
     @scs =  generate_result(@stream.id, 'SC')
     @obcs = generate_result(@stream.id, 'OBC')
   end
  end

  # GET /streams/new
  def new
    @stream = Stream.new
  end

  # GET /streams/1/edit
  def edit
    @stream = Stream.find(params[:id])
  end

  # POST /streams
  def create
    @stream = Stream.new(stream_params)

    respond_to do |format|
      if @stream.save
        format.html { redirect_to @stream, notice: 'Stream was successfully created.' }
      else
        format.html { render :new }
      end
    end
  end

  # PATCH/PUT /streams/1
  def update
    @stream = Stream.find(params[:id])
    respond_to do |format|
      if @stream.update(stream_params)
        format.html { redirect_to @stream, notice: 'Stream was successfully updated.' }
      else
        format.html { render :edit }
      end
    end
  end

  # DELETE /streams/1
  def destroy
    @stream = Stream.find(params[:id])
    @stream.destroy
    respond_to do |format|
      format.html { redirect_to streams_url, notice: 'Stream was successfully destroyed.' }
    end
  end

  private

    # Never trust parameters from the scary internet, only allow the white list through.
    def stream_params
      params.require(:stream).permit(:stream, :seats, :subject_stream_id)
    end
end
